const Web3 = require('web3')
const PlatformRegistryABI = require('../artifacts/contracts/PlatformRegistry.sol/PlatformRegistry.json')
const CharityCampaignABI = require('../artifacts/contracts/CharityCampaign.sol/CharityCampaign.json')

async function main() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Web3
	const web3 = new Web3('http://localhost:8545') // –∏–ª–∏ –≤–∞—à RPC URL

	// –ü–æ–ª—É—á–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç—ã
	const accounts = await web3.eth.getAccounts()
	const owner = accounts[0]
	const organization = accounts[1]
	const donor = accounts[2]

	console.log('Owner address:', owner)
	console.log('Organization address:', organization)
	console.log('Donor address:', donor)

	// –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ PlatformRegistry
	const registryAddress = '0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1'

	// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
	const registry = new web3.eth.Contract(PlatformRegistryABI, registryAddress)

	// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
	const isVerified = await registry.methods
		.verifiedOrganizations(organization)
		.call()
	if (!isVerified) {
		console.log('‚ÑπÔ∏è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º...')
		const tx = await registry.methods
			.verify(organization, true)
			.send({ from: owner })
		console.log(
			`‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ${organization} —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞, tx: ${tx.transactionHash}`
		)
	} else {
		console.log(`‚ÑπÔ∏è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ${organization} —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞`)
	}

	// 2. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é
	console.log('\n‚è≥ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é...')
	const goal = '50000000'
	const deadline = Math.floor(Date.now() / 1000) + 30 * 24 * 60 * 60 // 30 –¥–Ω–µ–π

	// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–º–ø–∞–Ω–∏–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
	const initialCampaigns = await registry.methods
		.getOrganizationCampaigns(organization)
		.call()
	const initialCount = initialCampaigns.length

	// –°–æ–∑–¥–∞–µ–º –∫–∞–º–ø–∞–Ω–∏—é
	const tx = await registry.methods
		.createCampaign(goal, deadline)
		.send({ from: organization })
	console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–∏: ${tx.transactionHash}`)

	// –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
	const updatedCampaigns = await registry.methods
		.getOrganizationCampaigns(organization)
		.call()
	const newCampaignAddress = updatedCampaigns[updatedCampaigns.length - 1]

	console.log(`üìå –ê–¥—Ä–µ—Å —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏: ${newCampaignAddress}`)

	// 3. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ CharityCampaign
	const campaign = new web3.eth.Contract(CharityCampaignABI, newCampaignAddress)

	// 4. –î–µ–ª–∞–µ–º –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Ç –¥–æ–Ω–æ—Ä–∞
	console.log('\nüí∏ –î–µ–ª–∞–µ–º –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Ç –¥–æ–Ω–æ—Ä–∞...')
	const donationAmount = web3.utils.toWei('1', 'ether')
	const donateTx = await campaign.methods.donate().send({
		from: donor,
		value: donationAmount,
	})
	console.log(
		`‚úÖ –î–æ–Ω–æ—Ä ${donor} –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª 1 ETH, tx: ${donateTx.transactionHash}`
	)

	// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–∏
	console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–∏...')
	const status = await campaign.methods.getStatus().call()
	console.log(`üìå –°—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–∏: ${status}`)
}

main()
	.then(() => process.exit(0))
	.catch(error => {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error)
		process.exit(1)
	})
