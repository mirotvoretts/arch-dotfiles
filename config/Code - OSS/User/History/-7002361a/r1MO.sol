const hre = require("hardhat");

async function main() {
  const [owner, organization, donor] = await hre.ethers.getSigners();

  console.log("Owner address:", owner.address);
  console.log("Organization address:", organization.address);
  console.log("Donor address:", donor.address);

  // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ PlatformRegistry
  const registry = await hre.ethers.getContractAt(
    "PlatformRegistry",
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  );

  // 1. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é (–µ—Å–ª–∏ –µ—â—ë –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞)
  try {
    const isVerified = await registry.verifiedOrgranizations(organization.address);
    if (!isVerified) {
      const tx = await registry.connect(owner).verify(organization.address, true);
      await tx.wait();
      console.log(`‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ${organization.address} —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞`);
    } else {
      console.log(`‚ÑπÔ∏è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ${organization.address} —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞`);
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:", error.reason || error.message);
    process.exit(1);
  }

  // 2. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é
  console.log("\n‚è≥ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é...");
  const goal = hre.ethers.utils.parseEther("5"); // —Ü–µ–ª—å: 5 ETH
  const deadline = Math.floor(Date.now() / 1000) + 30 * 24 * 60 * 60; // —Å—Ä–æ–∫: 30 –¥–Ω–µ–π

  const createCampaignTx = await registry.connect(organization).createCampaign(goal, deadline);
  const receipt = await createCampaignTx.wait();

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–¥—Ä–µ—Å –∫–∞–º–ø–∞–Ω–∏–∏ –∏–∑ —Å–æ–±—ã—Ç–∏—è CampaignCreated
  const campaignEvent = receipt.events.find((e) => e.event === "CampaignCreated");
  if (!campaignEvent) {
    throw new Error("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ CampaignCreated –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏");
  }

  const campaignAddress = campaignEvent.args._campaignAddress;
  console.log(`‚úÖ –ö–∞–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: ${campaignAddress}`);

  // 3. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ CharityCampaign
  const CharityCampaign = await hre.ethers.getContractFactory("CharityCampaign");
  const campaign = CharityCampaign.attach(campaignAddress);

  // 4. –î–µ–ª–∞–µ–º –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Ç –¥–æ–Ω–æ—Ä–∞
  console.log("\nüí∏ –î–µ–ª–∞–µ–º –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Ç –¥–æ–Ω–æ—Ä–∞...");
  const donateTx = await campaign.connect(donor).donate({
    value: hre.ethers.utils.parseEther("1"),
  });
  await donateTx.wait();
  console.log(`‚úÖ –î–æ–Ω–æ—Ä ${donor.address} –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª 1 ETH`);

  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–∏
  console.log("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–∏...");
  const status = await campaign.getStatus();
  console.log(`üìå –°—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–∏: ${status}`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞:", error);
    process.exit(1);
  });